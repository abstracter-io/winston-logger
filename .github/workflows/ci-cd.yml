# ${{ github.event.before }} ${{ github.sha }}
# https://github.com/conventional-changelog/commitlint/issues/586#issuecomment-657226800
# https://github.com/wagoid/commitlint-github-action ðŸ¤¦
#
#  verify packages are published as abstracter-bot <bot@abstracter.io>
#  then move NPM_USERNAME and NPM_EMAIL values to secrets (to reuse across the org)

name: Workflow

on:
  push:

env:
  release: ${{ github.ref == 'refs/heads/master' }}
  CI: true

jobs:
  ci-cd:
    name: ${{ github.ref == 'refs/heads/master' && 'ci/cd' || 'ci' }}

    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Determine Node.js version to use
        run: echo "::set-output name=version::$(cat .nvmrc)"
        id: nvm

      # https://github.com/actions/setup-node
      - name: Setup Node.js ${{ steps.nvm.outputs.version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.version }}

      - name: Determine npm cache location
        id: npm-cache-dir
        run: echo "##[set-output name=path;]$(npm config get cache)"

      # https://github.com/actions/cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache-dir.outputs.path }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install
        run: npm ci

      - name: lint
        run: npm run lint

      - name: test
        run: npm test

      - name: build
        run: npm run build

      # https://github.com/codecov/codecov-action
      - name: Collect coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/lcov.info
          # env_vars: OS,PYTHON
          name: "@abstracter/winston-logger"
          fail_ci_if_error: true

      - name: Release
        if: ${{ env.release == 'true' }}
        env:
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}

          NPM_EMAIL: ${{ secrets.BOT_EMAIL }}
          NPM_USERNAME: ${{ secrets.BOT_NAME }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

          GITHUB_TOKEN: ${{ secrets.BOT_PUSH_PAT }}
        run: npm run release
